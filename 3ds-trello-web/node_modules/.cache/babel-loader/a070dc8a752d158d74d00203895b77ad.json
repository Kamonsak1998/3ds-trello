{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/babel-loader/lib/index.js!/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/DateRangePicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/DateRangePicker.vue","mtime":1568606347230},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/babel-loader/lib/index.js","mtime":1565530613452},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DateRangePickerCalendar from \"./DateRangePickerCalendar\";\nimport { mapActions, mapGetters } from \"vuex\";\nlibrary.add(faCaretRight);\nexport default {\n  props: {\n    calendarCount: {\n      type: Number,\n      default: 2\n    },\n    ranges: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    defaultRangeSelect: {\n      type: String,\n      default: \"currentMonth\"\n    }\n  },\n  data: function data() {\n    return {\n      total: \"\",\n      sprint: \"\",\n      startDate: moment.utc(),\n      endDate: moment.utc(),\n      rangeSelect: null,\n      month: moment.utc().subtract(1, \"month\").startOf(\"month\"),\n      step: null,\n      submitted: false\n    };\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"startDates\", \"Sprints\", \"idBoard\"]), {\n    nextMonth: function nextMonth() {\n      return moment.utc(this.month).add(1, \"month\");\n    },\n    // For multi prop watchers\n    range: function range() {\n      return this.startDate, this.endDate;\n    }\n  }),\n  methods: _objectSpread({\n    clear: function clear() {\n      this.startDate = moment.utc();\n      this.endDate = moment.utc();\n      this.total = \"\";\n      this.$refs.startDate.focus();\n    },\n    goToPrevMonth: function goToPrevMonth() {\n      this.month = moment.utc(this.month).subtract(1, \"month\");\n    },\n    goToNextMonth: function goToNextMonth() {\n      this.month = moment.utc(this.month).add(1, \"month\");\n    },\n    selectRange: function selectRange(rangeKey) {\n      var predefinedRange = false; // Predefined ranges\n\n      for (var _i = 0, _Object$keys = Object.keys(this.ranges); _i < _Object$keys.length; _i++) {\n        var _rangeKey = _Object$keys[_i];\n        var range = this.ranges[_rangeKey];\n\n        if (rangeKey === _rangeKey) {\n          predefinedRange = true;\n\n          if (!this.startDate.isSame(range.startDate)) {\n            this.startDate = moment.utc(range.startDate);\n          }\n\n          if (!this.endDate.isSame(range.endDate)) {\n            this.endDate = moment.utc(range.endDate);\n          }\n        }\n      } // Custom range\n\n\n      if (!predefinedRange && this.step == null) {\n        this.step = \"selectStartDate\";\n        this.$refs.startDate.focus();\n      }\n    },\n    selectDate: function selectDate(date) {\n      if (this.step === \"selectStartDate\") {\n        this.startDate = date;\n      } else if (this.step === \"selectEndDate\") {\n        this.endDate = date;\n      }\n    },\n    // Step flow for date range selections\n    nextStep: function nextStep() {\n      if (this.step === \"selectStartDate\") {\n        this.step = \"selectEndDate\";\n        this.$refs.endDate.focus();\n      } else if (this.step === \"selectEndDate\") {\n        this.step = null;\n        this.$refs.endDate.blur();\n      }\n    },\n    // Try to update the step date from an input value\n    inputDate: function inputDate(input) {\n      var date = moment.utc(input.target.value, \"YYYY-MM-DD\");\n\n      if (date.isValid()) {\n        this.selectDate(date);\n      }\n\n      this.nextStep();\n    }\n  }, mapActions([\"getStartDate\", \"getSprint\"]), {\n    submit: function submit() {\n      var _this = this;\n\n      this.submitted = true;\n      this.$validator.validate().then(function (valid) {\n        if (valid) {\n          var endDate = _this.endDate;\n\n          _this.getStartDate(_this.startDate);\n\n          _this.getSprint(_this.total);\n\n          axios.post(\"http://localhost:9000/setdate\", {\n            startDate: _this.startDates,\n            Sprint: _this.Sprints,\n            endDate: endDate,\n            idBoard: _this.idBoard\n          }).then(function (res) {\n            alert(\"บันทึกข้อมูลเรียบร้อย\");\n          }).catch(function (err) {\n            if (err.message = \"Sprint error\") {\n              alert(\"Sorry Connection not found\");\n            }\n          });\n        }\n      });\n    }\n  }),\n  watch: {\n    rangeSelect: function rangeSelect(rangeKey) {\n      this.selectRange(rangeKey);\n    },\n    total: function total(value) {\n      if (value <= 1) {\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(6 * value, \"days\");\n      } else {\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(7 * value - 1, \"days\");\n      }\n    },\n    range: function range() {\n      var predefinedRange = false; // Predefined ranges\n\n      for (var _i2 = 0, _Object$keys2 = Object.keys(this.ranges); _i2 < _Object$keys2.length; _i2++) {\n        var rangeKey = _Object$keys2[_i2];\n        var range = this.ranges[rangeKey];\n\n        if (this.startDate.isSame(range.startDate) && this.endDate.isSame(range.endDate)) {\n          predefinedRange = true;\n\n          if (this.rangeSelect !== rangeKey) {\n            this.rangeSelect = rangeKey;\n          }\n        }\n      } // Custom range\n\n\n      if (!predefinedRange) {\n        if (this.rangeSelect !== \"custom\") {\n          this.rangeSelect = \"custom\";\n        }\n      }\n    }\n  },\n  filters: {\n    dateFormat: function dateFormat(value) {\n      return value ? value.format(\"YYYY-MM-DD\") : \"\";\n    }\n  },\n  created: function created() {\n    // Initialize ranges\n    this.rangeSelect = this.defaultRangeSelect;\n  },\n  components: {\n    DateRangePickerCalendar: DateRangePickerCalendar\n  }\n};",{"version":3,"sources":["DateRangePicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-container class=\"bv-example-row\">\n    <b-row>\n      <b-col v-for=\"calendarIndex in calendarCount\" :key=\"calendarIndex\">\n        <date-range-picker-calendar\n          :calendarIndex=\"calendarIndex\"\n          :calendarCount=\"calendarCount\"\n          :month=\"month\"\n          :startDate=\"startDate\"\n          :endDate=\"endDate\"\n          :step=\"step\"\n          v-on:goToPrevMonth=\"goToPrevMonth\"\n          v-on:goToNextMonth=\"goToNextMonth\"\n          v-on:selectDate=\"selectDate\"\n          v-on:nextStep=\"nextStep\"\n        />\n      </b-col>\n      <b-col>\n        <p>Start Sprint</p>\n        <div class=\"form-group form-inline flex-nowrap\">\n          <input\n            type=\"text\"\n            class=\"form-control w-100 daterangepicker-date-input\"\n            ref=\"startDate\"\n            :value=\"startDate | dateFormat\"\n            @focus=\"step = 'selectStartDate'\"\n            @blur=\"inputDate\"\n          />\n        </div>\n        <p>Sprint Period</p>\n        <input\n          name=\"total\"\n          type=\"text\"\n          class=\"form-control w-100 daterangepicker-date-input\"\n          ref=\"endDate\"\n          @focus=\"step = 'selectEndDate'\"\n          v-model=\"total\"\n          v-validate=\"'required|numeric|max:3'\"\n          :class=\"{ 'is-invalid': submitted && errors.has('total') }\"\n        />\n        <div\n          v-if=\"submitted && errors.has('phone')\"\n          class=\"invalid-feedback\"\n        >{{ errors.first('phone') }}</div>\n        <br />\n        <div class=\"form-group form-inline justify-content-end mb-0\">\n          <button type=\"button\" class=\"btn btn-light\" @click=\"clear\">Reset</button>\n          <button type=\"button\" class=\"btn btn-primary ml-2\" @click=\"submit\">Submit</button>\n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DateRangePickerCalendar from \"./DateRangePickerCalendar\";\nimport { mapActions, mapGetters } from \"vuex\";\nlibrary.add(faCaretRight);\n\nexport default {\n  props: {\n    calendarCount: {\n      type: Number,\n      default: 2\n    },\n\n    ranges: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    defaultRangeSelect: {\n      type: String,\n      default: \"currentMonth\"\n    }\n  },\n  data() {\n    return {\n      total: \"\",\n      sprint: \"\",\n      startDate: moment.utc(),\n      endDate: moment.utc(),\n      rangeSelect: null,\n      month: moment\n        .utc()\n        .subtract(1, \"month\")\n        .startOf(\"month\"),\n      step: null,\n      submitted: false\n    };\n  },\n  mounted: function (){\n    \n  },\n\n  computed: {\n    ...mapGetters([\"startDates\", \"Sprints\",\"idBoard\"]),\n    nextMonth: function() {\n      return moment.utc(this.month).add(1, \"month\");\n    },\n    // For multi prop watchers\n    range: function() {\n      return this.startDate, this.endDate;\n    }\n  },\n\n  methods: {\n    clear: function() {\n      this.startDate = moment.utc();\n      this.endDate = moment.utc();\n      this.total = \"\";\n      this.$refs.startDate.focus();\n    },\n\n    goToPrevMonth: function() {\n      this.month = moment.utc(this.month).subtract(1, \"month\");\n    },\n    goToNextMonth: function() {\n      this.month = moment.utc(this.month).add(1, \"month\");\n    },\n    selectRange: function(rangeKey) {\n      let predefinedRange = false;\n\n      // Predefined ranges\n      for (const _rangeKey of Object.keys(this.ranges)) {\n        const range = this.ranges[_rangeKey];\n        if (rangeKey === _rangeKey) {\n          predefinedRange = true;\n\n          if (!this.startDate.isSame(range.startDate)) {\n            this.startDate = moment.utc(range.startDate);\n          }\n          if (!this.endDate.isSame(range.endDate)) {\n            this.endDate = moment.utc(range.endDate);\n          }\n        }\n      }\n\n      // Custom range\n      if (!predefinedRange && this.step == null) {\n        this.step = \"selectStartDate\";\n        this.$refs.startDate.focus();\n      }\n    },\n\n    selectDate: function(date) {\n      if (this.step === \"selectStartDate\") {\n        this.startDate = date;\n      } else if (this.step === \"selectEndDate\") {\n        this.endDate = date;\n      }\n    },\n    // Step flow for date range selections\n    nextStep: function() {\n      if (this.step === \"selectStartDate\") {\n        this.step = \"selectEndDate\";\n        this.$refs.endDate.focus();\n      } else if (this.step === \"selectEndDate\") {\n        this.step = null;\n        this.$refs.endDate.blur();\n      }\n    },\n    // Try to update the step date from an input value\n    inputDate: function(input) {\n      let date = moment.utc(input.target.value, \"YYYY-MM-DD\");\n      if (date.isValid()) {\n        this.selectDate(date);\n      }\n      this.nextStep();\n    },\n    // Submit button\n    ...mapActions([\"getStartDate\", \"getSprint\"]),\n    submit: function() {\n      this.submitted = true;\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          let endDate = this.endDate;\n          this.getStartDate(this.startDate);\n          this.getSprint(this.total);\n          axios\n            .post(\"http://localhost:9000/setdate\", { startDate: this.startDates, Sprint: this.Sprints, endDate, idBoard: this.idBoard })\n            .then(res => {\n              alert(\"บันทึกข้อมูลเรียบร้อย\");\n            })\n            .catch(err => {\n              if ((err.message = \"Sprint error\")) {\n                alert(\"Sorry Connection not found\");\n              }\n            });\n        }\n      });\n    }\n  },\n  watch: {\n    rangeSelect: function(rangeKey) {\n      this.selectRange(rangeKey);\n    },\n    total: function(value) {\n      if (value <= 1){\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(\n                6 * value,\n                \"days\"\n        );\n      }else{\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(\n                7 * value -1,\"days\");  \n      }\n     \n    },\n\n    range: function() {\n      let predefinedRange = false;\n      // Predefined ranges\n      for (const rangeKey of Object.keys(this.ranges)) {\n        const range = this.ranges[rangeKey];\n        if (\n          this.startDate.isSame(range.startDate) &&\n          this.endDate.isSame(range.endDate)\n        ) {\n          predefinedRange = true;\n          if (this.rangeSelect !== rangeKey) {\n            this.rangeSelect = rangeKey;\n          }\n        }\n      }\n\n      // Custom range\n      if (!predefinedRange) {\n        if (this.rangeSelect !== \"custom\") {\n          this.rangeSelect = \"custom\";\n        }\n      }\n    }\n  },\n  filters: {\n    dateFormat: function(value) {\n      return value ? value.format(\"YYYY-MM-DD\") : \"\";\n    }\n  },\n  created: function() {\n    // Initialize ranges\n    this.rangeSelect = this.defaultRangeSelect;\n  },\n  components: { DateRangePickerCalendar }\n};\n</script>\n\n<style>\n/* Custom row */\n.daterangepicker-row {\n  margin: -0.5rem;\n}\n\n.daterangepicker-col {\n  padding: 0.5rem;\n  flex-basis: 100%;\n}\n.daterangepicker-date-input {\n  min-width: 120px;\n}\n\n/* Select menus border */\n.daterangepicker-range-border {\n  border-color: #17a2b8 !important;\n}\n\n.daterangepicker-range {\n  background-color: red !important;\n  color: #ffffff;\n}\n/* Date input focus */\n.daterangepicker-date-input:focus {\n  border-color: #17a2b8 !important;\n  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25) !important;\n}\n</style>\n"],"sourceRoot":"src/components/SetDateTime"}]}