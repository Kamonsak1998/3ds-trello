{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/auth/register.vue?vue&type=template&id=3b57ae4a&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/auth/register.vue","mtime":1568710243209},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565530645604},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-md-6 mx-auto mt-5\" }, [\n          _c(\"div\", { staticClass: \"card shadow p-4 bg-white\" }, [\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.addUser($event)\n                  }\n                }\n              },\n              [\n                _vm._m(0),\n                _c(\"div\", { staticClass: \"card-body text-left\" }, [\n                  _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                    _vm._m(1),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.output.email,\n                          expression: \"output.email\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|email\",\n                          expression: \"'required|email'\"\n                        }\n                      ],\n                      ref: \"email\",\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\": _vm.submitted && _vm.errors.has(\"email\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-email\",\n                        type: \"text\",\n                        name: \"email\",\n                        placeholder: \"Enter e-mail\"\n                      },\n                      domProps: { value: _vm.output.email },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.output, \"email\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"email\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"email\")))\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                    _vm._m(2),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|min:6|max:12\",\n                          expression: \"'required|min:6|max:12'\"\n                        }\n                      ],\n                      ref: \"password\",\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\":\n                          _vm.submitted && _vm.errors.has(\"password\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-password\",\n                        name: \"password\",\n                        type: \"password\",\n                        placeholder: \"Password\"\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"password\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"password\")))\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                    _vm._m(3),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|confirmed:password\",\n                          expression: \"'required|confirmed:password'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\":\n                          _vm.submitted &&\n                          _vm.errors.has(\"password_confirmation\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-repassword\",\n                        name: \"password_confirmation\",\n                        type: \"password\",\n                        placeholder: \"Repeat password\"\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"password_confirmation\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(\n                            _vm._s(_vm.errors.first(\"password_confirmation\"))\n                          )\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                    _vm._m(4),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.output.firstname,\n                          expression: \"output.firstname\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|max:15\",\n                          expression: \"'required|max:15'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\":\n                          _vm.submitted && _vm.errors.has(\"firstname\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-firstname\",\n                        type: \"text\",\n                        name: \"firstname\",\n                        pattern: \"^[a-zA-Z-ก-๏\\\\s]+$\",\n                        placeholder: \"Enter firstname\"\n                      },\n                      domProps: { value: _vm.output.firstname },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.output, \"firstname\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"firstname\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"firstname\")))\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                    _vm._m(5),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.output.lastname,\n                          expression: \"output.lastname\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|max:15\",\n                          expression: \"'required|max:15'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\":\n                          _vm.submitted && _vm.errors.has(\"lastname\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-lastname\",\n                        type: \"text\",\n                        name: \"lastname\",\n                        pattern: \"^[a-zA-Z-ก-๏\\\\s]+$\",\n                        placeholder: \"Enter lastname\"\n                      },\n                      domProps: { value: _vm.output.lastname },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.output, \"lastname\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"lastname\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"lastname\")))\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"input-group mb-4\" }, [\n                    _vm._m(6),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.output.phone,\n                          expression: \"output.phone\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required|numeric|max:10\",\n                          expression: \"'required|numeric|max:10'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\": _vm.submitted && _vm.errors.has(\"phone\")\n                      },\n                      attrs: {\n                        \"data-cy\": \"input-register-phone\",\n                        type: \"text\",\n                        name: \"phone\",\n                        pattern: \"^0([8|9|6])([0-9]{8}$)\",\n                        placeholder: \"Enter phone\"\n                      },\n                      domProps: { value: _vm.output.phone },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.output, \"phone\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.submitted && _vm.errors.has(\"phone\")\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"phone\")))\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btnregister\",\n                      attrs: {\n                        \"data-cy\": \"input-register-btnregister \",\n                        type: \"submit\"\n                      }\n                    },\n                    [_vm._v(\"Create Account\")]\n                  )\n                ])\n              ]\n            )\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"text-center\" }, [\n      _c(\"h1\", [_vm._v(\"Register\")]),\n      _c(\"p\", { staticClass: \"text-muted\" }, [_vm._v(\"Create your account\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [_vm._v(\"@\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [\n        _c(\"i\", { staticClass: \"icon-lock\" })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [\n        _c(\"i\", { staticClass: \"icon-lock\" })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [\n        _c(\"i\", { staticClass: \"icon-user\" })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [\n        _c(\"i\", { staticClass: \"icon-user\" })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"input-group-prepend\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [\n        _c(\"i\", { staticClass: \"icon-phone\" })\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}