{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/Setting/DateRangePickerCalendar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/Setting/DateRangePickerCalendar.vue","mtime":1568710357637},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/css-loader/index.js","mtime":1565530642957},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565530645604},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/postcss-loader/src/index.js","mtime":1565530644649},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.daterangepicker-calendar-row {\n  font-size: 12px;\n  /*max-width: 230px;*/\n}\n\n.col-day {\n  width: 14.28%;\n  padding: 0.5rem 0;\n  white-space: nowrap;\n  cursor: default;\n}\n\n.daterangepicker-cursor-pointer {\n  cursor: pointer;\n}\n",{"version":3,"sources":["DateRangePickerCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"DateRangePickerCalendar.vue","sourceRoot":"src/components/Setting","sourcesContent":["<template>\n  <div class=\"daterangepicker-calendar\">\n    <div class=\"d-flex align-items-center\">\n      <div class=\"p-4\" :class=\"calendarIndex == 1 ? '' : 'invisible'\">\n        <button type=\"button\" class=\"btn btn-sm btn-light\" @mousedown.prevent @click=\"goToPrevMonth\">\n          <font-awesome-icon icon=\"caret-left\" fixed-width />\n        </button>\n      </div>\n      <div class=\"p-1 col text-center\">\n        {{ displayMonth.format('MMMM YYYY') }}\n      </div>\n      <div class=\"p-1\" :class=\"calendarIndex == calendarCount ? '' : 'invisible'\">\n        <button type=\"button\" class=\"btn btn-sm btn-light\" @mousedown.prevent @click=\"goToNextMonth\">\n          <font-awesome-icon icon=\"caret-right\" fixed-width />\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"d-flex pl-2 justify-content-between text-center daterangepicker-calendar-row\">\n      <div v-for=\"day in daysOfFirstWeek\" :key=\"day.format('D')\" class=\"col-day\">{{ day.format('ddd') }}</div>\n    </div>\n\n    <div class=\"d-flex pl-2 flex-wrap justify-content-between text-center daterangepicker-calendar-row\">\n      <div v-for=\"day in days\" :key=\"day.format('M-D')\" class=\"col-day\" :class=\"dayClass(day)\"\n        @mouseover=\"dayMouseOver(day)\" @mousedown.prevent @click=\"dayClick(day)\">\n        {{ day.format('D') }}\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nlibrary.add(faCaretLeft, faCaretRight)\n\nexport default {\n  props: ['calendarIndex', 'calendarCount', 'month', 'startDate', 'endDate', 'step'],\n  data: () => {\n    return {}\n  },\n  computed: {\n    displayMonth: function() {\n      return moment.utc(this.month).add(this.calendarIndex - 1, 'month')\n    },\n    days: function() {\n      let startDay = moment.utc(this.displayMonth).startOf('isoWeek')\n      let endDay = moment.utc(this.displayMonth).endOf('month').endOf('isoWeek').startOf('day').add(7, 'day')\n      let nDays = moment.duration(endDay.diff(startDay)).asDays()\n\n      let days = []\n      let day = 0\n      while (day < nDays) {\n        days.push(moment.utc(startDay).add(day, 'day'))\n        day++\n      }\n      return days\n    },\n    daysOfFirstWeek: function() {\n      return this.days.slice(0, 7)\n    }\n  },\n  \n  methods: {\n\n    dayClass: function(day) {\n      let classes = []\n\n      // Hide days overflowing\n      if (!day.isBetween(this.displayMonth, moment.utc(this.displayMonth).endOf('month'), 'days', '[]')) {\n        classes.push('invisible')\n      }\n      // Class for days between startDate & endDate or is startDate (in case of startDate after endDate)\n      if (day.isBetween(this.startDate, this.endDate, 'days', '[]') || day.isSame(this.startDate)) {\n        classes.push('daterangepicker-range')\n      }\n      // Class for cursor if the step is selecting something\n      if (this.step != null) {\n        classes.push('daterangepicker-cursor-pointer')\n      }\n\n      return classes.join(' ')\n    },\n    dayMouseOver: function(day) {\n      if (this.step != null) {\n        this.selectDate(day)\n      }\n    },\n    dayClick: function() {\n      if (this.step != null) {\n        this.nextStep()\n      }\n    },\n    goToPrevMonth: function() {\n      this.$emit('goToPrevMonth')\n    },\n    goToNextMonth: function() {\n      this.$emit('goToNextMonth')\n    },\n    selectDate: function(date) {\n      this.$emit('selectDate', date)\n    },\n    nextStep: function() {\n      this.$emit('nextStep')\n    }\n  },\n  watch: {},\n  filters: {},\n  components: { FontAwesomeIcon }\n}\n</script>\n\n<style>\n.daterangepicker-calendar-row {\n  font-size: 12px;\n  /*max-width: 230px;*/\n}\n\n.col-day {\n  width: 14.28%;\n  padding: 0.5rem 0;\n  white-space: nowrap;\n  cursor: default;\n}\n\n.daterangepicker-cursor-pointer {\n  cursor: pointer;\n}\n</style>\n"]}]}