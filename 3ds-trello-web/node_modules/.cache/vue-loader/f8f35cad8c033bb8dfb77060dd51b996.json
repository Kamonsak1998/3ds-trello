{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/setdatetime.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/setdatetime.vue","mtime":1568606347230},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/babel-loader/lib/index.js","mtime":1565530613452},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCalendarAlt, faCaretDown } from '@fortawesome/free-solid-svg-icons'\nimport BModalDirective from 'bootstrap-vue/es/directives/modal/modal'\nimport DateRangePicker from '@/components/SetDateTime/DateRangePicker'\nimport { mapGetters } from \"vuex\";\n\n\nlibrary.add(faCalendarAlt, faCaretDown)\n\nexport default {\n  components: { DateRangePicker  },\n  directives: { 'b-modal': BModalDirective },\n  data: () => {\n    return {\n      startDate: moment.utc().subtract(1, 'month').startOf('month'),\n      endDate: moment.utc().subtract(1, 'month').endOf('month').startOf('day')\n    }\n  },\n mounted: function() {\n    if (this.idBoard != \"\") {\n       // console.log(1234);\n      \n      return;\n    } else {\n      this.$router.push(\"/dashboards\");\n      return;\n        // console.log(1234);\n    }\n  },\n  computed: {\n    ...mapGetters([\"idBoard\"])\n  },\n  methods: {\n    setscore(arr){\n        this.parameter[arr[0]] = arr[1]\n    },\n    submitted: function() {\n      // console.log(range)\n    },\n    // Modal methods\n    submittedModal: function(range) {\n      this.startDate = range.startDate\n      this.endDate = range.endDate\n      this.closeModal()\n    },\n    cancelledModal: function() {\n      this.closeModal()\n    },\n    closeModal: function() {\n      this.$refs.exampleModal.hide()\n    },\n    // Popover methods\n    submittedPopover: function(range) {\n      this.startDate = range.startDate\n      this.endDate = range.endDate\n      this.closePopover()\n    },\n    cancelledPopover: function() {\n      this.closePopover()\n    },\n    closePopover: function() {\n      this.$refs.examplePopover.$emit('close')\n    }\n  },\n  filters: {\n    dateFormat: function(value) {\n      return value ? value.format('YYYY-MM-DD') : ''\n    }\n  }\n}\n",{"version":3,"sources":["setdatetime.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"setdatetime.vue","sourceRoot":"src/components/SetDateTime","sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"my-4 pb-2 border-bottom\"></h2>\n    <h3 class=\"pb-2 border-bottom\">Set Date Time Stamp</h3>\n    <div class=\"mb-4\">\n      <date-range-picker v-on:submit=\"submitted\" />\n    </div>\n    <h3 class=\"pb-2 border-bottom\"></h3>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCalendarAlt, faCaretDown } from '@fortawesome/free-solid-svg-icons'\nimport BModalDirective from 'bootstrap-vue/es/directives/modal/modal'\nimport DateRangePicker from '@/components/SetDateTime/DateRangePicker'\nimport { mapGetters } from \"vuex\";\n\n\nlibrary.add(faCalendarAlt, faCaretDown)\n\nexport default {\n  components: { DateRangePicker  },\n  directives: { 'b-modal': BModalDirective },\n  data: () => {\n    return {\n      startDate: moment.utc().subtract(1, 'month').startOf('month'),\n      endDate: moment.utc().subtract(1, 'month').endOf('month').startOf('day')\n    }\n  },\n mounted: function() {\n    if (this.idBoard != \"\") {\n       // console.log(1234);\n      \n      return;\n    } else {\n      this.$router.push(\"/dashboards\");\n      return;\n        // console.log(1234);\n    }\n  },\n  computed: {\n    ...mapGetters([\"idBoard\"])\n  },\n  methods: {\n    setscore(arr){\n        this.parameter[arr[0]] = arr[1]\n    },\n    submitted: function() {\n      // console.log(range)\n    },\n    // Modal methods\n    submittedModal: function(range) {\n      this.startDate = range.startDate\n      this.endDate = range.endDate\n      this.closeModal()\n    },\n    cancelledModal: function() {\n      this.closeModal()\n    },\n    closeModal: function() {\n      this.$refs.exampleModal.hide()\n    },\n    // Popover methods\n    submittedPopover: function(range) {\n      this.startDate = range.startDate\n      this.endDate = range.endDate\n      this.closePopover()\n    },\n    cancelledPopover: function() {\n      this.closePopover()\n    },\n    closePopover: function() {\n      this.$refs.examplePopover.$emit('close')\n    }\n  },\n  filters: {\n    dateFormat: function(value) {\n      return value ? value.format('YYYY-MM-DD') : ''\n    }\n  }\n}\n</script>\n\n<style>\n\n\n.popover {\n  max-width: 800px;\n}\n</style>\n"]}]}