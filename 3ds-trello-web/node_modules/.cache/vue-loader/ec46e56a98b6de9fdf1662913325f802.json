{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/Setting/selectlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/Setting/selectlist.vue","mtime":1568718326039},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/babel-loader/lib/index.js","mtime":1565530613452},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  inject:[\"parentValidator\"],\n  created() {\n    this.$validator = this.parentValidator\n  },\n  props: {\n    model: {\n      type: Array,\n      required: true\n    },\n    selectListed: {\n      type: Array,\n      required: true\n    },\n    listed: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.setSelect();\n  },\n  computed: {\n    model2() {\n      this.result = this.model.filter(list => {\n        return list !== this.selectListed[0];\n      });\n      return this.result;\n    },\n    model3() {\n      return this.result.filter(list => {\n        return list !== this.selectListed[1];\n      });\n    }\n  },\n  data() {\n    return {\n      result: \"\",\n      select2disable: true,\n      select3disable: true,\n      submitted : false\n    };\n  },\n  methods: {\n    formValidate() {\n        this.submitted = true;\n        return this.$validator.validate()\n      },\n    setSelect() {\n      if (this.listed) {\n        this.selectListed[0] = this.listed[0];\n        this.selectListed[1] = this.listed[1];\n        this.selectListed[2] = this.listed[2];\n      }\n    },\n    select1Change(event) {\n      this.select2disable = false;\n    },\n    select2Change(event) {\n      this.select3disable = false;\n    }\n  }\n};\n",{"version":3,"sources":["selectlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"selectlist.vue","sourceRoot":"src/components/Setting","sourcesContent":["<template>\n  <div class=\"card p-5\">\n    *First list:\n    <b-form-select\n      v-model=\"selectListed[0]\"\n      @change=\"select1Change($event)\"\n      name=\"select\"\n      v-validate=\"'required'\"\n      :class=\"{ 'is-invalid': submitted && errors.has('select') }\"\n    >\n      <option v-for=\"(list,index) in model\" :value=\"list\" :key=\"index\">{{list.listName}}</option>\n    </b-form-select>\n    <div v-if=\"submitted && errors.has('select')\" class=\"invalid-feedback\">{{ errors.first('select') }}</div>\n    <br />Second list:\n    <b-form-select\n      v-model=\"selectListed[1]\"\n      @change=\"select2Change($event)\"\n      :disabled=\"select2disable\"\n    >\n      <option v-for=\"(list,index) in model2\" :value=\"list\" :key=\"index\">{{list.listName}}</option>\n    </b-form-select>\n    <br />Third list:\n    <b-form-select v-model=\"selectListed[2]\" :disabled=\"select3disable\">\n      <option v-for=\"(list,index) in model3\" :value=\"list\" :key=\"index\">{{list.listName}}</option>\n    </b-form-select>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject:[\"parentValidator\"],\n  created() {\n    this.$validator = this.parentValidator\n  },\n  props: {\n    model: {\n      type: Array,\n      required: true\n    },\n    selectListed: {\n      type: Array,\n      required: true\n    },\n    listed: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.setSelect();\n  },\n  computed: {\n    model2() {\n      this.result = this.model.filter(list => {\n        return list !== this.selectListed[0];\n      });\n      return this.result;\n    },\n    model3() {\n      return this.result.filter(list => {\n        return list !== this.selectListed[1];\n      });\n    }\n  },\n  data() {\n    return {\n      result: \"\",\n      select2disable: true,\n      select3disable: true,\n      submitted : false\n    };\n  },\n  methods: {\n    formValidate() {\n        this.submitted = true;\n        return this.$validator.validate()\n      },\n    setSelect() {\n      if (this.listed) {\n        this.selectListed[0] = this.listed[0];\n        this.selectListed[1] = this.listed[1];\n        this.selectListed[2] = this.listed[2];\n      }\n    },\n    select1Change(event) {\n      this.select2disable = false;\n    },\n    select2Change(event) {\n      this.select3disable = false;\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}