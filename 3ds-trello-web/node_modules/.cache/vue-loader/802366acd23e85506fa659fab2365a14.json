{"remainingRequest":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/DateRangePicker.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/src/components/SetDateTime/DateRangePicker.vue","mtime":1568606347230},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/css-loader/index.js","mtime":1565530642957},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565530645604},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/postcss-loader/src/index.js","mtime":1565530644649},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/cache-loader/dist/cjs.js","mtime":1565530642104},{"path":"/home/god/Projects/3ds-project-management-tool-plug-with-trello/node_modules/vue-loader/lib/index.js","mtime":1565530645604}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Custom row */\n.daterangepicker-row {\n  margin: -0.5rem;\n}\n\n.daterangepicker-col {\n  padding: 0.5rem;\n  flex-basis: 100%;\n}\n.daterangepicker-date-input {\n  min-width: 120px;\n}\n\n/* Select menus border */\n.daterangepicker-range-border {\n  border-color: #17a2b8 !important;\n}\n\n.daterangepicker-range {\n  background-color: red !important;\n  color: #ffffff;\n}\n/* Date input focus */\n.daterangepicker-date-input:focus {\n  border-color: #17a2b8 !important;\n  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25) !important;\n}\n",{"version":3,"sources":["DateRangePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DateRangePicker.vue","sourceRoot":"src/components/SetDateTime","sourcesContent":["<template>\n  <b-container class=\"bv-example-row\">\n    <b-row>\n      <b-col v-for=\"calendarIndex in calendarCount\" :key=\"calendarIndex\">\n        <date-range-picker-calendar\n          :calendarIndex=\"calendarIndex\"\n          :calendarCount=\"calendarCount\"\n          :month=\"month\"\n          :startDate=\"startDate\"\n          :endDate=\"endDate\"\n          :step=\"step\"\n          v-on:goToPrevMonth=\"goToPrevMonth\"\n          v-on:goToNextMonth=\"goToNextMonth\"\n          v-on:selectDate=\"selectDate\"\n          v-on:nextStep=\"nextStep\"\n        />\n      </b-col>\n      <b-col>\n        <p>Start Sprint</p>\n        <div class=\"form-group form-inline flex-nowrap\">\n          <input\n            type=\"text\"\n            class=\"form-control w-100 daterangepicker-date-input\"\n            ref=\"startDate\"\n            :value=\"startDate | dateFormat\"\n            @focus=\"step = 'selectStartDate'\"\n            @blur=\"inputDate\"\n          />\n        </div>\n        <p>Sprint Period</p>\n        <input\n          name=\"total\"\n          type=\"text\"\n          class=\"form-control w-100 daterangepicker-date-input\"\n          ref=\"endDate\"\n          @focus=\"step = 'selectEndDate'\"\n          v-model=\"total\"\n          v-validate=\"'required|numeric|max:3'\"\n          :class=\"{ 'is-invalid': submitted && errors.has('total') }\"\n        />\n        <div\n          v-if=\"submitted && errors.has('phone')\"\n          class=\"invalid-feedback\"\n        >{{ errors.first('phone') }}</div>\n        <br />\n        <div class=\"form-group form-inline justify-content-end mb-0\">\n          <button type=\"button\" class=\"btn btn-light\" @click=\"clear\">Reset</button>\n          <button type=\"button\" class=\"btn btn-primary ml-2\" @click=\"submit\">Submit</button>\n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DateRangePickerCalendar from \"./DateRangePickerCalendar\";\nimport { mapActions, mapGetters } from \"vuex\";\nlibrary.add(faCaretRight);\n\nexport default {\n  props: {\n    calendarCount: {\n      type: Number,\n      default: 2\n    },\n\n    ranges: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    defaultRangeSelect: {\n      type: String,\n      default: \"currentMonth\"\n    }\n  },\n  data() {\n    return {\n      total: \"\",\n      sprint: \"\",\n      startDate: moment.utc(),\n      endDate: moment.utc(),\n      rangeSelect: null,\n      month: moment\n        .utc()\n        .subtract(1, \"month\")\n        .startOf(\"month\"),\n      step: null,\n      submitted: false\n    };\n  },\n  mounted: function (){\n    \n  },\n\n  computed: {\n    ...mapGetters([\"startDates\", \"Sprints\",\"idBoard\"]),\n    nextMonth: function() {\n      return moment.utc(this.month).add(1, \"month\");\n    },\n    // For multi prop watchers\n    range: function() {\n      return this.startDate, this.endDate;\n    }\n  },\n\n  methods: {\n    clear: function() {\n      this.startDate = moment.utc();\n      this.endDate = moment.utc();\n      this.total = \"\";\n      this.$refs.startDate.focus();\n    },\n\n    goToPrevMonth: function() {\n      this.month = moment.utc(this.month).subtract(1, \"month\");\n    },\n    goToNextMonth: function() {\n      this.month = moment.utc(this.month).add(1, \"month\");\n    },\n    selectRange: function(rangeKey) {\n      let predefinedRange = false;\n\n      // Predefined ranges\n      for (const _rangeKey of Object.keys(this.ranges)) {\n        const range = this.ranges[_rangeKey];\n        if (rangeKey === _rangeKey) {\n          predefinedRange = true;\n\n          if (!this.startDate.isSame(range.startDate)) {\n            this.startDate = moment.utc(range.startDate);\n          }\n          if (!this.endDate.isSame(range.endDate)) {\n            this.endDate = moment.utc(range.endDate);\n          }\n        }\n      }\n\n      // Custom range\n      if (!predefinedRange && this.step == null) {\n        this.step = \"selectStartDate\";\n        this.$refs.startDate.focus();\n      }\n    },\n\n    selectDate: function(date) {\n      if (this.step === \"selectStartDate\") {\n        this.startDate = date;\n      } else if (this.step === \"selectEndDate\") {\n        this.endDate = date;\n      }\n    },\n    // Step flow for date range selections\n    nextStep: function() {\n      if (this.step === \"selectStartDate\") {\n        this.step = \"selectEndDate\";\n        this.$refs.endDate.focus();\n      } else if (this.step === \"selectEndDate\") {\n        this.step = null;\n        this.$refs.endDate.blur();\n      }\n    },\n    // Try to update the step date from an input value\n    inputDate: function(input) {\n      let date = moment.utc(input.target.value, \"YYYY-MM-DD\");\n      if (date.isValid()) {\n        this.selectDate(date);\n      }\n      this.nextStep();\n    },\n    // Submit button\n    ...mapActions([\"getStartDate\", \"getSprint\"]),\n    submit: function() {\n      this.submitted = true;\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          let endDate = this.endDate;\n          this.getStartDate(this.startDate);\n          this.getSprint(this.total);\n          axios\n            .post(\"http://localhost:9000/setdate\", { startDate: this.startDates, Sprint: this.Sprints, endDate, idBoard: this.idBoard })\n            .then(res => {\n              alert(\"บันทึกข้อมูลเรียบร้อย\");\n            })\n            .catch(err => {\n              if ((err.message = \"Sprint error\")) {\n                alert(\"Sorry Connection not found\");\n              }\n            });\n        }\n      });\n    }\n  },\n  watch: {\n    rangeSelect: function(rangeKey) {\n      this.selectRange(rangeKey);\n    },\n    total: function(value) {\n      if (value <= 1){\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(\n                6 * value,\n                \"days\"\n        );\n      }else{\n        this.endDate = moment(this.startDate, \"YYYY-MM-DD\").add(\n                7 * value -1,\"days\");  \n      }\n     \n    },\n\n    range: function() {\n      let predefinedRange = false;\n      // Predefined ranges\n      for (const rangeKey of Object.keys(this.ranges)) {\n        const range = this.ranges[rangeKey];\n        if (\n          this.startDate.isSame(range.startDate) &&\n          this.endDate.isSame(range.endDate)\n        ) {\n          predefinedRange = true;\n          if (this.rangeSelect !== rangeKey) {\n            this.rangeSelect = rangeKey;\n          }\n        }\n      }\n\n      // Custom range\n      if (!predefinedRange) {\n        if (this.rangeSelect !== \"custom\") {\n          this.rangeSelect = \"custom\";\n        }\n      }\n    }\n  },\n  filters: {\n    dateFormat: function(value) {\n      return value ? value.format(\"YYYY-MM-DD\") : \"\";\n    }\n  },\n  created: function() {\n    // Initialize ranges\n    this.rangeSelect = this.defaultRangeSelect;\n  },\n  components: { DateRangePickerCalendar }\n};\n</script>\n\n<style>\n/* Custom row */\n.daterangepicker-row {\n  margin: -0.5rem;\n}\n\n.daterangepicker-col {\n  padding: 0.5rem;\n  flex-basis: 100%;\n}\n.daterangepicker-date-input {\n  min-width: 120px;\n}\n\n/* Select menus border */\n.daterangepicker-range-border {\n  border-color: #17a2b8 !important;\n}\n\n.daterangepicker-range {\n  background-color: red !important;\n  color: #ffffff;\n}\n/* Date input focus */\n.daterangepicker-date-input:focus {\n  border-color: #17a2b8 !important;\n  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25) !important;\n}\n</style>\n"]}]}